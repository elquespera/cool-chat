export async function* mockAssistantResponse() {
  const start = rand(0, mockArray.length / 2);
  const length = rand(mockArray.length / 2, mockArray.length);
  for (let content of mockArray.slice(start, start + length)) {
    yield await new Promise<{ message: { content: string } }>((resolve) =>
      setTimeout(
        () => resolve({ message: { content } }),
        Math.round(20 + Math.random() * 100),
      ),
    );
  }
}

const rand = (start: number, end: number) =>
  Math.round(start + Math.random() * (end - start));

const mockArray = [
  "Lo",
  "rem ",
  "ip",
  "sum ",
  "dolo",
  "r si",
  "t am",
  "et, ",
  "con",
  "sect",
  "etur",
  " adip",
  "iscing ",
  "eli",
  "t. ",
  "Sed ",
  "do ",
  "eiu",
  "smod",
  " tem",
  "por ",
  "inc",
  "idi",
  "dun",
  "t ut",
  " lab",
  "ore",
  " et ",
  "dol",
  "ore ",
  "mag",
  "na a",
  "liqu",
  "a. U",
  "t en",
  "im ",
  "ad ",
  "min",
  "im ",
  "ven",
  "iam",
  ", qu",
  "is n",
  "ostr",
  "ud ",
  "ex",
  "erci",
  "tat",
  "ion ",
  "ulla",
  "mco ",
  "labo",
  "ris ",
  "nis",
  "i ut",
  " aliq",
  "uip ",
  "ex ",
  "ea ",
  "comm",
  "odo ",
  "con",
  "sequ",
  "at. ",
  "Dui",
  "s au",
  "te i",
  "rur",
  "e do",
  "lor ",
  "in ",
  "re",
  "pre",
  "hend",
  "erit",
  " in ",
  "vol",
  "upta",
  "te v",
  "elit",
  " es",
  "se c",
  "illum",
  " dol",
  "ore ",
  "eu f",
  "ugia",
  "t nu",
  "lla p",
  "aria",
  "tur",
  ". Ex",
  "cept",
  "eur ",
  "sint",
  " occ",
  "aeca",
  "t cu",
  "pid",
  "atat",
  " non ",
  "proi",
  "dent",
  ", su",
  "nt i",
  "n cu",
  "lpa ",
  "qui ",
  "offi",
  "cia ",
  "des",
  "erun",
  "t mo",
  "llit",
  " anim",
  " id ",
  "est ",
  "labo",
  "rum.\n",
];
